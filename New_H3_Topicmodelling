##topicmodel für H3 (Regionalzeitungen)
require(rvest)
require(tidyverse)
require(rio)
require(quanteda)
library(readr)
library(dplyr)
require(igraph)
require(stringr)
require(quanteda)
require(stm)
require(tidyverse)
install.packages(c('geometry', 'Rtsne', 'rsvd'))
library(geometry)
library(Rtsne)
library(rsvd)

regional <- readRDS('./Regional_articles.rds') ## Regionale Artike einlesen
export(regional, "regional.xlsx")
#regional %>% group_by(source) %>% summarise(n = n()) %>% arrange(desc(n)) %>% print(n = 30) ##Nach Quelle sortieren (DailyH. 166 und CharlestonG.155); zusammenfassen (nach Anzahl) und von Groß nach klein sortieren

regional_dfm <- dfm(corpus(regional$content), remove_numbers = TRUE, remove_punct = TRUE, remove_symbols = TRUE, remove = c(stopwords("english"), "said", "told", "call")) ## Erstellen einer Dataframe Matrix, Remove: Numbers, Symbols and Stopword
regional_dfm_stem <- dfm_wordstem(regional_dfm) ##aus regional_dfm dfm_wordstem machen, (returns a dfm object whose features have been stemmed and recombined to consolidate features made equivalent)

regional_dfm_processed <- dfm_trim(regional_dfm_stem, min_docfreq = 50)## only wordstems that appear in at least min_docfreq articles remain
#dim(regional_dfm_processed) ## Show dimensions of dataframe

dfm_tfidf(regional_dfm_processed) %>% textplot_wordcloud(color = c('red', 'pink', 'green', 'purple', 'orange', 'blue'),max_words=60) ## wordcloud. n=100?

dfm_stm <- quanteda::convert(regional_dfm_processed, to = "stm")
#saveRDS(dfm_stm, "./regional_dfm_stm.RDS") ## Save stm

dfm_stm <- readRDS("./regional_dfm_stm.RDS") ## Load stm

stm_model <- stm(dfm_stm$documents, dfm_stm$vocab, K = 0, data = dfm_stm$meta, init.type = "Spectral", seed = 46709394)## create stm model K number of desired topics, K=0 defaults to some algorithm for choosing this
#saveRDS(stm_model, "./stm_model.RDS") ##save stm_model

labelTopics(stm_model)##show 41 topics

#Validation - ich weiß aber nicht was mir das jetzt bringt
set.seed(12901802)
test_sample <- sample(1:41, size = 10)
keywords <- labelTopics(stm_model, n = 4)[[1]][test_sample,]
intruders <- labelTopics(stm_model, n = 321)[[1]][test_sample, 321]

candidates <- cbind(keywords, intruders, rows = 1:15) %>% as_tibble

shuffle_df <- function(x, candidates) {
  res <- candidates[x, sample(1:5)]
  colnames(res) <- c("1", "2", "3", "4", "5")
  return(res)
}
map_dfr(1:10, shuffle_df, candidates = candidates) %>% rio::export("./stm_validate.csv")

#weiter geht's:

plot(stm_model, type = "summary") ##plot expected topic proportion; arranged by top topic desc

install.packages('devtools')
install.packages('servr')
install.packages('usethis')
library(devtools)
library(servr)
devtools::install_github("cpsievert/LDAvis", force = TRUE)

toLDAvis(stm_model, docs = dfm_stm$documents, reorder.topics = FALSE) ##das ist das coole Schaubild!


theta <- as.data.frame(stm_model$theta) ##if theta for a topic is high than the article belongs to those topics (0-1)
colnames(theta) <- paste0("topic", 1:41) ## name topics in theta topic1-topic41 (K in general)

regional_theta <- bind_cols(regional, theta) ## add regional and theta to large dataframe

### Selecting the highest topics

regional_theta %>% filter(source == "Daily Herald") %>% select(starts_with("topic")) %>%
  colSums %>% sort(decreasing=TRUE) -> theta_sum_DH ## Create theta sum for Daily Herald
theta_sum_DH=theta_sum_DH/length(t(filter(regional_theta,source=="Daily Herald")[1])) ## Normalize result
theta_sum_DH ## 1, 41, 11

regional_theta %>% filter(source == "Charleston Gazette") %>% select(starts_with("topic")) %>%
  colSums %>% sort(decreasing=TRUE) -> theta_sum_CG ## Create theta sum for Charleston Gazette
theta_sum_CG=theta_sum_CG/length(t(filter(regional_theta,source=="Charleston Gazette")[1])) ## Normalize result
theta_sum_CG ## 11, 35, 23

### Selecting the highest articles
# Dialy Herald
regional_theta %>% arrange(desc(topic1)) %>% filter(source == "Daily Herald") %>% 
  select(source, title, topic1, date) -> regional_theta_DH ## Return sorted articles from Daily herald and topic 1
regional_theta_DH[c(1,2,3),] # First articles
which(regional_theta$title==regional_theta_DH$title[1] | regional_theta$title==regional_theta_DH$title[2] | regional_theta$title==regional_theta_DH$title[3]) # Indices of the articles in the excel sheet, +1

# Charleston Gazette
regional_theta %>% arrange(desc(topic11)) %>% filter(source == "Charleston Gazette") %>% 
  select(source, title, topic11, date) -> regional_theta_CG ## Return sorted articles from Charleston Gazette and topic 11
regional_theta_CG[c(1,2,3),]
which(regional_theta$title==regional_theta_CG$title[1] | regional_theta$title==regional_theta_CG$title[2] | regional_theta$title==regional_theta_CG$title[3]) # Indices of the articles in the excel sheet, +1

